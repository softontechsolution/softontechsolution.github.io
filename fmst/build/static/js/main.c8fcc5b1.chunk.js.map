{"version":3,"sources":["component/ContextProvider/StateProvider.js","component/firebase/fireConfig.js","component/Login/home.js","component/dashboard_common/HeaderLayout.js","component/dashboard_common/FooterLayout.js","component/Logs/SpeedLog.js","component/Logs/FuelLog.js","component/Logs/FuelRefillLog.js","component/Logs/MaintainenceLog.js","component/Logs/OverSpeedLog.js","component/Logs/AccidentAlert.js","component/Logs/FuelTheftAlert.js","component/dashboard/Dashboard.js","App.js","serviceWorker.js","component/ContextProvider/Reducer.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","performance","auth","db","firestore","Alert","props","elevation","variant","Home","React","useState","openSuccess","setOpenSuccess","openError","setOpenError","openSignInError","setOpenSignInError","handleClose","event","reason","id","color","dark","expand","fixed","scrolling","transparent","tag","style","className","type","delay","src","alt","padding","marginTop","md","label","icon","group","validate","error","success","gradient","onClick","email","document","querySelector","password","fireConfig","signInWithEmailAndPassword","then","console","log","catch","err","sendPasswordResetEmail","user","Snackbar","open","autoHideDuration","onClose","severity","Title","Typography","Header","Layout","HeaderLayout","theme","level","Tooltip","title","ghost","PoweroffOutlined","preventDefualt","signOut","float","margin","fontSize","marginLeft","marginRight","displayName","Footer","FooterLayout","date","Date","getFullYear","background","textAlign","rel","href","Component","SpeedLog","ReactFC","fcRoot","FusionCharts","Widgets","FusionTheme","charts","lastItem","loading","setLoading","speedData","setSpeedData","lastSpeed","useEffect","collection","doc","orderBy","onSnapshot","docs","speed_value","forEach","push","data","undefined","length","Object","entries","key","dataSource","chart","captionpadding","origw","origh","gaugeouterradius","gaugestartangle","gaugeendangle","showvalue","valuefontsize","majortmnumber","majortmthickness","majortmheight","minortmheight","minortmthickness","minortmnumber","showgaugeborder","colorrange","minvalue","maxvalue","code","dials","dial","bgcolor","basewidth","annotations","groups","items","text","x","y","fontsize","defaultSorted","dataField","order","SearchBar","Search","ClearSearchButton","MyExportCSV","onExport","width","height","dataFormat","bootstrap4","keyField","columns","search","searchProps","csvProps","pagination","paginationFactory","baseProps","animation","FuelLog","Charts","fuelData","setFuelData","lastId","lastFuel","lastTimestamp","fuel_value","keys","map","fuelLevelChartConfigs","caption","subCaption","xAxisName","yAxisName","numberSuffix","FuelRefillLog","fuelRefillData","setFuelRefillData","lastFuelRefill","fuleRefill_value","fuelRefillChartConfigs","MaintainenceLog","maintainenceData","setMaintainenceData","lastMaintainance","maintainance_value","maintainenceSource","subcaption","showvalues","numvisibleplot","plottooltext","categories","category","dataset","OverSpeedLog","overSpeedData","setOverSpeedData","lastOverSpeed","overSpeed_value","overspeedingSource","AccidentAlert","accidentAlertData","setaccidentAlert","lastGeoLat","lastGeoLong","accident_value","FuelTheftAlert","fuelTheftAlertData","setfuelTheftAlert","fuelTheft_value","Dashboard","Content","Sider","SubMenu","Menu","vehicleAddSuccess","setvehicleAddSuccess","vehicleAddError","setvehicleAddError","maintainanceAddSuccess","setmaintainanceAddSuccess","maintainanceAddError","setmaintainanceAddError","vehicleNAME","setVehicleNAME","vehicleID","setVehicleID","vehicleRegNumber","setVehicleRegNumber","moment","toString","setDate","cost","setCost","collapseState","setCollapseState","submitHandler","preventDefault","target","moduleState","setModuleState","liveState","currentState","state","minHeight","collapsible","collapsed","onCollapse","defaultSelectedKeys","defaultOpenKeys","mode","Item","PieChartOutlined","DesktopOutlined","Link","window","location","orientation","onSubmit","noValidate","name","onChange","required","outline","set","vehicleId","vehicleName","amount","timestamp","speed","accident","geolocation_lat","geolocation_long","fuelTheft","utils","DateFnsUtils","disableToolbar","fullWidth","format","val","KeyboardButtonProps","add","cose","App","dispatch","onAuthStateChanged","authUser","Boolean","hostname","match","action","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c8fcc5b1.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\n\n// prepare the datalayer\nexport const StateContext = createContext();\n\n// wrap our app and provide the datalayer\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\n// pull information from the datalayer\nexport const useStateValue = () => useContext(StateContext);\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/performance\";\n\nconst fireConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: \"smart-vehicle-fleet-manager.firebaseapp.com\",\n  databaseURL: \"https://smart-vehicle-fleet-manager.firebaseio.com\",\n  projectId: \"smart-vehicle-fleet-manager\",\n  storageBucket: \"smart-vehicle-fleet-manager.appspot.com\",\n  messagingSenderId: \"35283794292\",\n  appId: \"1:35283794292:web:8f57bd332e3993aa295421\",\n  measurementId: \"G-2RDWV3B4X4\",\n};\n\nfirebase.initializeApp(fireConfig);\n\nexport const perf = firebase.performance();\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\nexport default firebase;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport {\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBMask,\n  MDBRow,\n  MDBCol,\n  MDBBtn,\n  MDBView,\n  MDBContainer,\n  MDBInput,\n  MDBAnimation,\n  MDBTypography,\n} from \"mdbreact\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport \"./home.css\";\nimport fireConfig from \"../firebase/fireConfig\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction Home() {\n  // snakbar state\n  const [openSuccess, setOpenSuccess] = React.useState(false);\n  const [openError, setOpenError] = React.useState(false);\n  const [openSignInError, setOpenSignInError] = React.useState(false);\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSuccess(false);\n    setOpenError(false);\n    setOpenSignInError(false);\n  };\n\n  // login\n  const login = () => {\n    const email = document.querySelector(\"#login_email\").value;\n    const password = document.querySelector(\"#login_password\").value;\n\n    fireConfig\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        setOpenSuccess(false);\n        setOpenError(false);\n        setOpenSignInError(false);\n        console.log(\"SignedIN succeed!!!\");\n      })\n      .catch((err) => {\n        setOpenSuccess(false);\n        setOpenError(false);\n        setOpenSignInError(true);\n      });\n  };\n\n  // forgot password\n  const forgotPass = () => {\n    const email = document.querySelector(\"#login_email\").value;\n\n    fireConfig\n      .auth()\n      .sendPasswordResetEmail(email)\n      .then(function (user) {\n        setOpenError(false);\n        setOpenSignInError(false);\n        setOpenSuccess(true);\n      })\n      .catch(function (err) {\n        setOpenSuccess(false);\n        setOpenSignInError(false);\n        setOpenError(true);\n      });\n  };\n\n  return (\n    <div id=\"apppage\">\n      <Router>\n        <div>\n          <MDBNavbar\n            color=\"primary-color\"\n            dark\n            expand=\"md\"\n            fixed=\"top\"\n            scrolling\n            transparent\n          >\n            <MDBContainer>\n              <MDBNavbarBrand>\n                <MDBCol>\n                  <MDBTypography\n                    tag=\"h3\"\n                    variant=\"h3-responsive\"\n                    style={{ color: \"#EAF0F1\" }}\n                  >\n                    Smart Vehicle Fleet Manager\n                  </MDBTypography>\n                </MDBCol>\n              </MDBNavbarBrand>\n            </MDBContainer>\n          </MDBNavbar>\n        </div>\n      </Router>\n      <MDBView>\n        <MDBMask className=\"d-flex justify-content-center align-items-center gradient\">\n          <MDBContainer>\n            <MDBRow>\n              <MDBAnimation type=\"fadeInLeft\" delay=\".3s\">\n                <img\n                  src=\"https://mdbootstrap.com/img/Mockups/Transparent/Small/admin-new.png\"\n                  alt=\"\"\n                  className=\"img-fluid\"\n                  style={{ padding: \"40px\", marginTop: \"200px\" }}\n                />\n              </MDBAnimation>\n            </MDBRow>\n          </MDBContainer>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol md=\"6\">\n                <MDBRow className=\"d-flex justify-content-center\">\n                  <h3 className=\"white-text mb-3 pt-3 font-weight-bold\">\n                    Log in\n                  </h3>\n                </MDBRow>\n                <form>\n                  <div className=\"white-text\">\n                    <MDBInput\n                      className=\"white-text\"\n                      label=\"Type your email\"\n                      icon=\"envelope\"\n                      id=\"login_email\"\n                      group\n                      type=\"email\"\n                      validate\n                      error=\"wrong\"\n                      success=\"right\"\n                    />\n                    <MDBInput\n                      className=\"white-text\"\n                      label=\"Type your password\"\n                      icon=\"lock\"\n                      id=\"login_password\"\n                      group\n                      type=\"password\"\n                      validate\n                    />\n                  </div>\n                  <div className=\"text-center\">\n                    <MDBBtn gradient=\"blue\" onClick={login}>\n                      Login\n                    </MDBBtn>\n                    <MDBBtn gradient=\"peach\" onClick={forgotPass}>\n                      Forgot Pass\n                    </MDBBtn>\n                  </div>\n                </form>\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n        </MDBMask>\n      </MDBView>\n      <Snackbar\n        open={openSuccess}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"success\">\n          Please check your email for instructions on how to reset your\n          password...!\n        </Alert>\n      </Snackbar>\n      <Snackbar open={openError} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Incorrect email, Please type correct email and hit the forgot\n          button...!\n        </Alert>\n      </Snackbar>\n      <Snackbar\n        open={openSignInError}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"error\">\n          Incorrect username and password. Please Try again...!\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport fireConfig from \"../firebase/fireConfig\";\nimport { Layout, Button, Typography } from \"antd\";\nimport { PoweroffOutlined } from \"@ant-design/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { useStateValue } from \"../ContextProvider/StateProvider\";\n\nconst { Title } = Typography;\nconst { Header } = Layout;\n\nfunction HeaderLayout() {\n  const [{ user }] = useStateValue();\n\n  // logout\n  const logout = (event) => {\n    event.preventDefualt();\n    fireConfig.auth().signOut();\n  };\n\n  return (\n    <Layout>\n      <Header\n        theme=\"dark\"\n        className=\"site-layout-background\"\n        style={{ padding: 0 }}\n      >\n        <Title style={{ color: \"#EAF0F1\", padding: 15 }} level={3}>\n          Smart Vehicle Fleet Manager\n          <Tooltip title=\"Logout\">\n            <Button\n              ghost\n              icon={<PoweroffOutlined />}\n              onClick={logout}\n              style={{\n                float: \"right\",\n                margin: \"auto 20px auto 20px\",\n              }}\n            />\n          </Tooltip>\n          <span\n            style={{\n              float: \"right\",\n              fontSize: \"20px\",\n              marginLeft: \"10px\",\n              marginRight: \"10px\",\n            }}\n          >\n            {user?.displayName || user?.email}\n          </span>\n        </Title>\n      </Header>\n    </Layout>\n  );\n}\n\nexport default HeaderLayout;\n","import React from \"react\";\nimport { Layout, Typography } from \"antd\";\n// import Link from \"@material-ui/core/Link\";\n\nconst { Footer } = Layout;\nconst { Title } = Typography;\nclass FooterLayout extends React.Component {\n  render() {\n    const date = new Date().getFullYear();\n    return (\n      <Footer\n        style={{ background: \"#282c34\", color: \"white\", textAlign: \"center\" }}\n      >\n        <link\n          rel=\"stylesheet\"\n          type=\"text/css\"\n          href=\"//code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css\"\n        />\n\n        {/* footer greeting;s */}\n        <Title style={{ color: \"#EAF0F1\", padding: 5 }} level={3}>\n          Smart Vehicle Fleet Manager\n        </Title>\n        <Title style={{ color: \"#b2bec3\" }} level={5}>\n          © All rights are resevered | {date} <br />\n          Made with <i className=\"icon ion-heart fa-2x text-danger\"></i> by\n          India.\n        </Title>\n\n        {/* fork me ribbon */}\n        {/* <Link href=\"https://github.com/abhishekpatel946/Smart-Vehicle-Fleet-Manager\">\n            <img loading=\"lazy\" width=\"149\" height=\"149\" src=\"https://  github.blog/wp-content/uploads/2008/12/ forkme_right_white_ffffff.png?resize=149%2C149\"  class=\"attachment-full size-full\" alt=\"Fork me on GitHub\"  data-recalc-dims=\"1\">\n          </Link> */}\n      </Footer>\n    );\n  }\n}\n\nexport default FooterLayout;\n","import React, { useEffect, useState } from \"react\";\nimport { db } from \"../firebase/fireConfig\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport * as ReactBootstrap from \"react-bootstrap\";\nimport charts from \"fusioncharts/fusioncharts.charts\";\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport Widgets from \"fusioncharts/fusioncharts.widgets\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionCharts from \"fusioncharts\";\nimport \"./SpeedLog.css\";\n\nfunction SpeedLog() {\n  // define chart props\n  ReactFC.fcRoot(FusionCharts, Widgets, FusionTheme);\n\n  // Resolves charts dependancy\n  charts(FusionCharts);\n\n  const [loading, setLoading] = useState(false);\n  const [speedData, setSpeedData] = useState([]);\n\n  let lastItem;\n  let lastSpeed = 0;\n\n  useEffect(() => {\n    db.collection(\"data\")\n      .doc(\"MP10ME7969\")\n      .collection(\"speed\")\n      .orderBy(\"id\", \"asc\")\n      .onSnapshot((docs) => {\n        const speed_value = [];\n        docs.forEach((doc) => {\n          speed_value.push(doc.data());\n        });\n        setSpeedData(speed_value);\n        setLoading(true);\n      });\n  }, []);\n\n  lastItem = speedData[speedData.length - 1];\n  if (lastItem !== undefined) {\n    const obj = Object.entries(lastItem);\n    obj.forEach(([key, value]) => {\n      if (key === \"speed\") {\n        lastSpeed = value;\n      }\n    });\n  }\n\n  lastItem = speedData[speedData.length - 1];\n  if (lastItem !== undefined) {\n    const obj = Object.entries(lastItem);\n    obj.forEach(([key, value]) => {\n      if (key === \"speed\") {\n        lastSpeed = value;\n      }\n    });\n  }\n\n  // config widget\n  const dataSource = {\n    chart: {\n      captionpadding: \"0\",\n      origw: \"320\",\n      origh: \"300\",\n      gaugeouterradius: \"115\",\n      gaugestartangle: \"270\",\n      gaugeendangle: \"-25\",\n      showvalue: \"1\",\n      valuefontsize: \"30\",\n      majortmnumber: \"13\",\n      majortmthickness: \"2\",\n      majortmheight: \"13\",\n      minortmheight: \"7\",\n      minortmthickness: \"1\",\n      minortmnumber: \"1\",\n      showgaugeborder: \"0\",\n      theme: \"fusion\",\n    },\n    colorrange: {\n      color: [\n        {\n          minvalue: \"0\",\n          maxvalue: \"85\",\n          code: \"#999999\",\n        },\n        {\n          minvalue: \"85\",\n          maxvalue: \"180\",\n          code: \"#F6F6F6\",\n        },\n      ],\n    },\n    dials: {\n      dial: [\n        {\n          value: lastSpeed,\n          bgcolor: \"#F20F2F\",\n          basewidth: \"8\",\n        },\n      ],\n    },\n    annotations: {\n      groups: [\n        {\n          items: [\n            {\n              type: \"text\",\n              id: \"text\",\n              text: \"kmph\",\n              x: \"$gaugeCenterX\",\n              y: \"$gaugeCenterY + 40\",\n              fontsize: \"20\",\n              color: \"#555555\",\n            },\n          ],\n        },\n      ],\n    },\n  };\n\n  const columns = [\n    {\n      text: \"SPEED\",\n      dataField: \"speed\",\n    },\n    {\n      text: \"TIMESTAMP\",\n      dataField: \"timestamp\",\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"id\",\n      order: \"asc\",\n    },\n  ];\n\n  const { SearchBar, ClearSearchButton } = Search;\n  const MyExportCSV = (props) => {\n    const handleClick = (event) => {\n      event.preventDefualt();\n      props.onExport();\n    };\n    return (\n      <div>\n        <button className=\"btn btn-success\" onClick={handleClick}>\n          Export to CSV\n        </button>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"speedlog\">\n      <div className=\"speedlog_widget\">\n        <ReactFusioncharts\n          type=\"angulargauge\"\n          width=\"50%\"\n          height=\"50%\"\n          dataFormat=\"JSON\"\n          dataSource={dataSource}\n        />\n      </div>\n      <div className=\"speedlog_table\">\n        {loading ? (\n          <ToolkitProvider\n            bootstrap4\n            keyField=\"id\"\n            data={speedData}\n            columns={columns}\n            search\n          >\n            {(props) => (\n              <div>\n                <div className=\"speedlog_btn h6 text-right mb-1\">\n                  <SearchBar {...props.searchProps} />\n                  <ClearSearchButton\n                    className=\"btn btn-success\"\n                    {...props.searchProps}\n                  />\n                  <MyExportCSV {...props.csvProps} />\n                </div>\n                <hr />\n                <BootstrapTable\n                  defaultSorted={defaultSorted}\n                  pagination={paginationFactory()}\n                  {...props.baseProps}\n                />\n              </div>\n            )}\n          </ToolkitProvider>\n        ) : (\n          <ReactBootstrap.Spinner animation=\"border\" />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SpeedLog;\n","import React, { useEffect, useState } from \"react\";\nimport { db } from \"../firebase/fireConfig\";\nimport FusionCharts from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport * as ReactBootstrap from \"react-bootstrap\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport \"./FuelLog.css\";\n\nfunction FuelLog() {\n  // define chart props\n  ReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\n\n  const [loading, setLoading] = useState(false);\n  const [fuelData, setFuelData] = useState([]);\n\n  let lastItem = [];\n  let lastId = [];\n  let lastFuel = [];\n  let lastTimestamp = [];\n\n  // fetch data\n  useEffect(() => {\n    db.collection(\"data\")\n      .doc(\"MP10ME7969\")\n      .collection(\"fuel\")\n      .orderBy(\"id\", \"asc\")\n      .onSnapshot((docs) => {\n        const fuel_value = [];\n        docs.forEach((doc) => {\n          fuel_value.push(doc.data());\n        });\n        setFuelData(fuel_value);\n        setLoading(true);\n      });\n  }, []);\n\n  // last record from data...\n  Object.keys(fuelData).map((key) => {\n    lastItem = fuelData[key];\n    const obj = Object.entries(lastItem);\n    obj.forEach(([key, value]) => {\n      if (key === \"id\") {\n        lastId.push(value);\n      }\n      if (key === \"amount\") {\n        lastFuel.push(value);\n      }\n      if (key === \"timestamp\") {\n        lastTimestamp.push(value);\n      }\n    });\n    return 0;\n  });\n\n  // config fuel level chat\n  const fuelLevelChartConfigs = {\n    type: \"column2d\",\n    width: 500,\n    height: 400,\n    dataFormat: \"json\",\n    dataSource: {\n      chart: {\n        caption: \"Vehicle Fuel level In [litre]\",\n        subCaption: \"In litres\",\n        xAxisName: \"Timestamp\",\n        yAxisName: \"Fuel (litre)\",\n        numberSuffix: \"Lt.\",\n        theme: \"fusion\",\n      },\n      data: [\n        {\n          label: lastTimestamp[lastTimestamp.length - 5],\n          value: lastFuel[lastFuel.length - 5],\n        },\n        {\n          label: lastTimestamp[lastTimestamp.length - 4],\n          value: lastFuel[lastFuel.length - 4],\n        },\n        {\n          label: lastTimestamp[lastTimestamp.length - 3],\n          value: lastFuel[lastFuel.length - 3],\n        },\n        {\n          label: lastTimestamp[lastTimestamp.length - 2],\n          value: lastFuel[lastFuel.length - 2],\n        },\n        {\n          label: lastTimestamp[lastTimestamp.length - 1],\n          value: lastFuel[lastFuel.length - 1],\n        },\n      ],\n    },\n  };\n\n  const columns = [\n    {\n      text: \"AMOUNT\",\n      dataField: \"amount\",\n    },\n    {\n      text: \"TIMESTAMP\",\n      dataField: \"timestamp\",\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"id\",\n      order: \"asc\",\n    },\n  ];\n\n  const { SearchBar, ClearSearchButton } = Search;\n  const MyExportCSV = (props) => {\n    const handleClick = (event) => {\n      event.preventDefualt();\n      props.onExport();\n    };\n    return (\n      <div>\n        <button className=\"btn btn-success\" onClick={handleClick}>\n          Export to CSV\n        </button>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"fuelLog\">\n      <div className=\"fuelLog_chart\">\n        <ReactFC {...fuelLevelChartConfigs} />\n      </div>\n      <div className=\"fuelLog_table\">\n        {loading ? (\n          <ToolkitProvider\n            bootstrap4\n            keyField=\"id\"\n            data={fuelData}\n            columns={columns}\n            search\n          >\n            {(props) => (\n              <div>\n                <div className=\"fuelLog_btn h6 text-right mb-1\">\n                  <SearchBar {...props.searchProps} />\n                  <ClearSearchButton\n                    className=\"btn btn-success\"\n                    {...props.searchProps}\n                  />\n                  <MyExportCSV {...props.csvProps} />\n                </div>\n                <hr />\n                <BootstrapTable\n                  defaultSorted={defaultSorted}\n                  pagination={paginationFactory()}\n                  {...props.baseProps}\n                />\n              </div>\n            )}\n          </ToolkitProvider>\n        ) : (\n          <ReactBootstrap.Spinner animation=\"border\" />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default FuelLog;\n","import React, { useEffect, useState } from \"react\";\nimport { db } from \"../firebase/fireConfig\";\nimport FusionCharts from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport * as ReactBootstrap from \"react-bootstrap\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport \"./FuelRefillLog.css\";\n\nfunction FuelRefillLog() {\n  // define chart props\n  ReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\n\n  const [fuelRefillData, setFuelRefillData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  let lastItem = [];\n  let lastId = [];\n  let lastFuelRefill = [];\n  let lastTimestamp = [];\n\n  useEffect(() => {\n    db.collection(\"data\")\n      .doc(\"MP10ME7969\")\n      .collection(\"fuel_refill\")\n      .orderBy(\"id\", \"asc\")\n      .onSnapshot((docs) => {\n        const fuleRefill_value = [];\n        docs.forEach((doc) => {\n          fuleRefill_value.push(doc.data());\n        });\n        setFuelRefillData(fuleRefill_value);\n        setLoading(true);\n      });\n  }, []);\n\n  // last record from data...\n  Object.keys(fuelRefillData).map((key) => {\n    lastItem = fuelRefillData[key];\n    const obj = Object.entries(lastItem);\n    obj.forEach(([key, value]) => {\n      if (key === \"id\") {\n        lastId.push(value);\n      }\n      if (key === \"amount\") {\n        lastFuelRefill.push(value);\n      }\n      if (key === \"timestamp\") {\n        lastTimestamp.push(value);\n      }\n    });\n    return 0;\n  });\n\n  // config fuel refill chart\n  const fuelRefillChartConfigs = {\n    type: \"column2d\",\n    width: 500,\n    height: 400,\n    dataFormat: \"json\",\n    dataSource: {\n      chart: {\n        caption: \"Vehicle Fuel Refill In [litre]\",\n        subCaption: \"In litres\",\n        xAxisName: \"Timestamp\",\n        yAxisName: \"Fuel (litre)\",\n        numberSuffix: \"Lt.\",\n        theme: \"fusion\",\n      },\n      data: [\n        {\n          label: lastTimestamp[lastTimestamp.length - 5],\n          value: lastFuelRefill[lastFuelRefill.length - 5],\n        },\n        {\n          label: lastTimestamp[lastTimestamp.length - 4],\n          value: lastFuelRefill[lastFuelRefill.length - 4],\n        },\n        {\n          label: lastTimestamp[lastTimestamp.length - 3],\n          value: lastFuelRefill[lastFuelRefill.length - 3],\n        },\n        {\n          label: lastTimestamp[lastTimestamp.length - 2],\n          value: lastFuelRefill[lastFuelRefill.length - 2],\n        },\n        {\n          label: lastTimestamp[lastTimestamp.length - 1],\n          value: lastFuelRefill[lastFuelRefill.length - 1],\n        },\n      ],\n    },\n  };\n\n  const columns = [\n    {\n      text: \"AMOUNT\",\n      dataField: \"amount\",\n    },\n    {\n      text: \"TIMESTAMP\",\n      dataField: \"timestamp\",\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"id\",\n      order: \"asc\",\n    },\n  ];\n\n  const { SearchBar, ClearSearchButton } = Search;\n  const MyExportCSV = (props) => {\n    const handleClick = (event) => {\n      event.preventDefualt();\n      props.onExport();\n    };\n    return (\n      <div>\n        <button className=\"btn btn-success\" onClick={handleClick}>\n          Export to CSV\n        </button>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"fuelRefillLog\">\n      <div className=\"fuelRefillLog_chart\">\n        <ReactFC {...fuelRefillChartConfigs} />\n      </div>\n      <div className=\"fuelRefillLog_table\">\n        {loading ? (\n          <ToolkitProvider\n            bootstrap4\n            keyField=\"id\"\n            data={fuelRefillData}\n            columns={columns}\n            search\n          >\n            {(props) => (\n              <div>\n                <div className=\"fuelRefillLog_btn h6 text-right mb-1\">\n                  <SearchBar {...props.searchProps} />\n                  <ClearSearchButton\n                    className=\"btn btn-success\"\n                    {...props.searchProps}\n                  />\n                  <MyExportCSV {...props.csvProps} />\n                </div>\n                <hr />\n                <BootstrapTable\n                  defaultSorted={defaultSorted}\n                  pagination={paginationFactory()}\n                  {...props.baseProps}\n                />\n              </div>\n            )}\n          </ToolkitProvider>\n        ) : (\n          <ReactBootstrap.Spinner animation=\"border\" />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default FuelRefillLog;\n","import React, { useEffect, useState } from \"react\";\nimport { db } from \"../firebase/fireConfig\";\nimport FusionCharts from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport * as ReactBootstrap from \"react-bootstrap\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport \"./MaintainanceLog.css\";\n\nfunction MaintainenceLog() {\n  // define chart props\n  ReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\n\n  const [loading, setLoading] = useState(false);\n  const [maintainenceData, setMaintainenceData] = useState([]);\n\n  let lastItem = [];\n  let lastId = [];\n  let lastMaintainance = [];\n  let lastTimestamp = [];\n\n  useEffect(() => {\n    db.collection(\"data\")\n      .doc(\"MP10ME7969\")\n      .collection(\"maintainance\")\n      .orderBy(\"id\", \"asc\")\n      .onSnapshot((docs) => {\n        const maintainance_value = [];\n        docs.forEach((doc) => {\n          maintainance_value.push(doc.data());\n        });\n        setMaintainenceData(maintainance_value);\n        setLoading(true);\n      });\n  }, []);\n\n  // last record from data...\n  Object.keys(maintainenceData).map((key) => {\n    lastItem = maintainenceData[key];\n    const obj = Object.entries(lastItem);\n    obj.forEach(([key, value]) => {\n      if (key === \"id\") {\n        lastId.push(value);\n      }\n      if (key === \"Amount\") {\n        lastMaintainance.push(value);\n      }\n      if (key === \"timestamp\") {\n        lastTimestamp.push(value);\n      }\n    });\n    return 0;\n  });\n\n  // config maintainence line with scrolling\n  Charts(FusionCharts);\n  const maintainenceSource = {\n    chart: {\n      caption: \"Vehicle Maintainance Instaces\",\n      subcaption: \"(As per recommended)\",\n      showvalues: \"0\",\n      numvisibleplot: \"12\",\n      plottooltext: \"<b>$dataValue</b> Speed of Vehicle at $label\",\n      theme: \"fusion\",\n    },\n    categories: [\n      {\n        category: [\n          {\n            label: lastTimestamp[lastTimestamp.length - 5],\n          },\n          {\n            label: lastTimestamp[lastTimestamp.length - 4],\n          },\n          {\n            label: lastTimestamp[lastTimestamp.length - 3],\n          },\n          {\n            label: lastTimestamp[lastTimestamp.length - 2],\n          },\n          {\n            label: lastTimestamp[lastTimestamp.length - 1],\n          },\n        ],\n      },\n    ],\n    dataset: [\n      {\n        data: [\n          {\n            value: lastMaintainance[lastMaintainance.length - 5],\n          },\n          {\n            value: lastMaintainance[lastMaintainance.length - 4],\n          },\n          {\n            value: lastMaintainance[lastMaintainance.length - 3],\n          },\n          {\n            value: lastMaintainance[lastMaintainance.length - 2],\n          },\n          {\n            value: lastMaintainance[lastMaintainance.length - 1],\n          },\n        ],\n      },\n    ],\n  };\n\n  const columns = [\n    {\n      text: \"COST\",\n      dataField: \"Amount\",\n    },\n    {\n      text: \"TIMESTAMP\",\n      dataField: \"timestamp\",\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"id\",\n      order: \"asc\",\n    },\n  ];\n\n  // export to CSV\n  const { SearchBar, ClearSearchButton } = Search;\n  const MyExportCSV = (props) => {\n    const handleClick = (event) => {\n      event.preventDefualt();\n      props.onExport();\n    };\n    return (\n      <div>\n        <button className=\"btn btn-success\" onClick={handleClick}>\n          Export to CSV\n        </button>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"maintainanceLog\">\n      <div className=\"maintainanceLog_chart\">\n        <ReactFusioncharts\n          type=\"scrollline2d\"\n          width=\"30%\"\n          height=\"40%\"\n          dataFormat=\"JSON\"\n          dataSource={maintainenceSource}\n        />\n      </div>\n      <div className=\"maintainanceLog_table\">\n        {loading ? (\n          <ToolkitProvider\n            bootstrap4\n            keyField=\"id\"\n            data={maintainenceData}\n            columns={columns}\n            search\n          >\n            {(props) => (\n              <div>\n                <div className=\"maintainanceLog_btn h6 text-right mb-1\">\n                  <SearchBar {...props.searchProps} />\n                  <ClearSearchButton\n                    className=\"btn btn-success\"\n                    {...props.searchProps}\n                  />\n                  <MyExportCSV {...props.csvProps} />\n                </div>\n                <hr />\n                <BootstrapTable\n                  defaultSorted={defaultSorted}\n                  pagination={paginationFactory()}\n                  {...props.baseProps}\n                />\n              </div>\n            )}\n          </ToolkitProvider>\n        ) : (\n          <ReactBootstrap.Spinner animation=\"border\" />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MaintainenceLog;\n","import React, { useEffect, useState } from \"react\";\nimport { db } from \"../firebase/fireConfig\";\nimport FusionCharts from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport * as ReactBootstrap from \"react-bootstrap\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport \"./OverSpeedLog.css\";\n\nfunction OverSpeedLog() {\n  // define chart props\n  ReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\n\n  const [overSpeedData, setOverSpeedData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  let lastItem = [];\n  let lastId = [];\n  let lastOverSpeed = [];\n  let lastTimestamp = [];\n\n  useEffect(() => {\n    db.collection(\"data\")\n      .doc(\"MP10ME7969\")\n      .collection(\"overspeed\")\n      .orderBy(\"id\", \"asc\")\n      .onSnapshot((docs) => {\n        const overSpeed_value = [];\n        docs.forEach((doc) => {\n          overSpeed_value.push(doc.data());\n        });\n        setOverSpeedData(overSpeed_value);\n        setLoading(true);\n      });\n  }, []);\n\n  // last record from data...\n  Object.keys(overSpeedData).map((key) => {\n    lastItem = overSpeedData[key];\n    const obj = Object.entries(lastItem);\n    obj.forEach(([key, value]) => {\n      if (key === \"id\") {\n        lastId.push(value);\n      }\n      if (key === \"speed\") {\n        lastOverSpeed.push(value);\n      }\n      if (key === \"timestamp\") {\n        lastTimestamp.push(value);\n      }\n    });\n    return 0;\n  });\n\n  // config overspeed line with scrolling\n  Charts(FusionCharts);\n  const overspeedingSource = {\n    chart: {\n      caption: \"Vehicle OverSpeeding Instaces\",\n      subcaption: \"(As per recommended)\",\n      showvalues: \"0\",\n      numvisibleplot: \"10\",\n      plottooltext: \"<b>$dataValue</b> Speed of Vehicle at $label\",\n      theme: \"fusion\",\n    },\n    categories: [\n      {\n        category: [\n          {\n            label: lastTimestamp[lastTimestamp.length - 5],\n          },\n          {\n            label: lastTimestamp[lastTimestamp.length - 4],\n          },\n          {\n            label: lastTimestamp[lastTimestamp.length - 3],\n          },\n          {\n            label: lastTimestamp[lastTimestamp.length - 2],\n          },\n          {\n            label: lastTimestamp[lastTimestamp.length - 1],\n          },\n        ],\n      },\n    ],\n    dataset: [\n      {\n        data: [\n          {\n            value: lastOverSpeed[lastOverSpeed.length - 5],\n          },\n          {\n            value: lastOverSpeed[lastOverSpeed.length - 4],\n          },\n          {\n            value: lastOverSpeed[lastOverSpeed.length - 3],\n          },\n          {\n            value: lastOverSpeed[lastOverSpeed.length - 2],\n          },\n          {\n            value: lastOverSpeed[lastOverSpeed.length - 1],\n          },\n        ],\n      },\n    ],\n  };\n\n  const columns = [\n    {\n      text: \"OVERSPEED\",\n      dataField: \"speed\",\n    },\n    {\n      text: \"TIMESTAMP\",\n      dataField: \"timestamp\",\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"id\",\n      order: \"asc\",\n    },\n  ];\n\n  const { SearchBar, ClearSearchButton } = Search;\n  const MyExportCSV = (props) => {\n    const handleClick = (event) => {\n      event.preventDefualt();\n      props.onExport();\n    };\n    return (\n      <div>\n        <button className=\"btn btn-success\" onClick={handleClick}>\n          Export to CSV\n        </button>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"fuelRefillLog\">\n      <div className=\"fuelRefillLog_chart\">\n        <ReactFusioncharts\n          type=\"scrollline2d\"\n          width=\"32%\"\n          height=\"40%\"\n          dataFormat=\"JSON\"\n          dataSource={overspeedingSource}\n        />\n      </div>\n      <div className=\"fuelRefillLog_table\">\n        {loading ? (\n          <ToolkitProvider\n            bootstrap4\n            keyField=\"id\"\n            data={overSpeedData}\n            columns={columns}\n            search\n          >\n            {(props) => (\n              <div>\n                <div className=\"fuelRefillLog_btn h6 text-right mb-1\">\n                  <SearchBar {...props.searchProps} />\n                  <ClearSearchButton\n                    className=\"btn btn-success\"\n                    {...props.searchProps}\n                  />\n                  <MyExportCSV {...props.csvProps} />\n                </div>\n                <hr />\n                <BootstrapTable\n                  defaultSorted={defaultSorted}\n                  pagination={paginationFactory()}\n                  {...props.baseProps}\n                />\n              </div>\n            )}\n          </ToolkitProvider>\n        ) : (\n          <ReactBootstrap.Spinner animation=\"border\" />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default OverSpeedLog;\n","import React, { useEffect, useState } from \"react\";\nimport { db } from \"../firebase/fireConfig\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport * as ReactBootstrap from \"react-bootstrap\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\n\nfunction AccidentAlert() {\n  const [loading, setLoading] = useState(false);\n  const [accidentAlertData, setaccidentAlert] = useState([]);\n\n  let lastItem = [];\n  let lastId = [];\n  let lastGeoLat = [];\n  let lastGeoLong = [];\n  let lastTimestamp = [];\n\n  useEffect(() => {\n    db.collection(\"data\")\n      .doc(\"MP10ME7969\")\n      .collection(\"accident_alert\")\n      .orderBy(\"id\", \"asc\")\n      .onSnapshot((docs) => {\n        const accident_value = [];\n        docs.forEach((doc) => {\n          accident_value.push(doc.data());\n        });\n        setaccidentAlert(accident_value);\n        setLoading(true);\n      });\n  }, []);\n\n  // last record from data...\n  Object.keys(accidentAlertData).map((key) => {\n    lastItem = accidentAlertData[key];\n    const obj = Object.entries(lastItem);\n    obj.forEach(([key, value]) => {\n      if (key === \"id\") {\n        lastId.push(value);\n      }\n      if (key === \"geolocation_lat\") {\n        lastGeoLat.push(value);\n      }\n      if (key === \"geolocation_long\") {\n        lastGeoLong.push(value);\n      }\n      if (key === \"timestamp\") {\n        lastTimestamp.push(value);\n      }\n    });\n    return 0;\n  });\n\n  //   define data in table accending order\n  const columns = [\n    {\n      text: \"ID\",\n      dataField: \"id\",\n    },\n    {\n      text: \"LATITUDE\",\n      dataField: \"geolocation_lat\",\n    },\n    {\n      text: \"LONGITUDE\",\n      dataField: \"geolocation_long\",\n    },\n    {\n      text: \"TIMESTAMP\",\n      dataField: \"timestamp\",\n    },\n  ];\n  const defaultSorted = [\n    {\n      dataField: \"id\",\n      order: \"asc\",\n    },\n  ];\n\n  // export to CSV\n  const { SearchBar, ClearSearchButton } = Search;\n\n  return (\n    <div className=\"fuelTheftAlert\">\n      <div className=\"fuelTheftAlert_table\">\n        {loading ? (\n          <ToolkitProvider\n            bootstrap4\n            keyField=\"id\"\n            data={accidentAlertData}\n            columns={columns}\n            search\n          >\n            {(props) => (\n              <div>\n                <div className=\"fuelTheftAlert_btn h6 text-right mb-1\">\n                  <SearchBar {...props.searchProps} />\n                  <ClearSearchButton\n                    className=\"btn btn-success\"\n                    {...props.searchProps}\n                  />\n                </div>\n                <hr />\n                <BootstrapTable\n                  defaultSorted={defaultSorted}\n                  pagination={paginationFactory()}\n                  {...props.baseProps}\n                />\n              </div>\n            )}\n          </ToolkitProvider>\n        ) : (\n          <ReactBootstrap.Spinner animation=\"border\" />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default AccidentAlert;\n","import React, { useEffect, useState } from \"react\";\nimport { db } from \"../firebase/fireConfig\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport * as ReactBootstrap from \"react-bootstrap\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\n\nfunction FuelTheftAlert() {\n  const [loading, setLoading] = useState(false);\n  const [fuelTheftAlertData, setfuelTheftAlert] = useState([]);\n\n  let lastItem = [];\n  let lastId = [];\n  let lastGeoLat = [];\n  let lastGeoLong = [];\n  let lastTimestamp = [];\n\n  useEffect(() => {\n    db.collection(\"data\")\n      .doc(\"MP10ME7969\")\n      .collection(\"fuel_theft_alert\")\n      .orderBy(\"id\", \"asc\")\n      .onSnapshot((docs) => {\n        const fuelTheft_value = [];\n        docs.forEach((doc) => {\n          fuelTheft_value.push(doc.data());\n        });\n        setfuelTheftAlert(fuelTheft_value);\n        setLoading(true);\n      });\n  }, []);\n\n  // console.log(fuelTheftAlertData);\n\n  // last record from data...\n  Object.keys(fuelTheftAlertData).map((key) => {\n    lastItem = fuelTheftAlertData[key];\n    const obj = Object.entries(lastItem);\n    obj.forEach(([key, value]) => {\n      if (key === \"id\") {\n        lastId.push(value);\n      }\n      if (key === \"geolocation_lat\") {\n        lastGeoLat.push(value);\n      }\n      if (key === \"geolocation_long\") {\n        lastGeoLong.push(value);\n      }\n      if (key === \"timestamp\") {\n        lastTimestamp.push(value);\n      }\n    });\n    return 0;\n  });\n\n  //   define data in table accending order\n  const columns = [\n    {\n      text: \"ID\",\n      dataField: \"id\",\n    },\n    {\n      text: \"LATITUDE\",\n      dataField: \"geolocation_lat\",\n    },\n    {\n      text: \"LONGITUDE\",\n      dataField: \"geolocation_long\",\n    },\n    {\n      text: \"TIMESTAMP\",\n      dataField: \"timestamp\",\n    },\n  ];\n  const defaultSorted = [\n    {\n      dataField: \"id\",\n      order: \"asc\",\n    },\n  ];\n\n  // export to CSV\n  const { SearchBar, ClearSearchButton } = Search;\n\n  return (\n    <div className=\"fuelTheftAlert\">\n      <div className=\"fuelTheftAlert_table\">\n        {loading ? (\n          <ToolkitProvider\n            bootstrap4\n            keyField=\"id\"\n            data={fuelTheftAlertData}\n            columns={columns}\n            search\n          >\n            {(props) => (\n              <div>\n                <div className=\"fuelTheftAlert_btn h6 text-right mb-1\">\n                  <SearchBar {...props.searchProps} />\n                  <ClearSearchButton\n                    className=\"btn btn-success\"\n                    {...props.searchProps}\n                  />\n                </div>\n                <hr />\n                <BootstrapTable\n                  defaultSorted={defaultSorted}\n                  pagination={paginationFactory()}\n                  {...props.baseProps}\n                />\n              </div>\n            )}\n          </ToolkitProvider>\n        ) : (\n          <ReactBootstrap.Spinner animation=\"border\" />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default FuelTheftAlert;\n","import React, { useState } from \"react\";\nimport { db } from \"../firebase/fireConfig\";\nimport HeaderLayout from \"../dashboard_common/HeaderLayout\";\nimport FooterLayout from \"../dashboard_common/FooterLayout\";\nimport SpeedLog from \"../Logs/SpeedLog\";\nimport FuelLog from \"../Logs/FuelLog\";\nimport FuelRefillLog from \"../Logs/FuelRefillLog\";\nimport MaintainenceLog from \"../Logs/MaintainenceLog\";\nimport OverSpeedLog from \"../Logs/OverSpeedLog\";\nimport AccidentAlert from \"../Logs/AccidentAlert\";\nimport FuelTheftAlert from \"../Logs/FuelTheftAlert\";\nimport { Layout, Menu, Breadcrumb, Divider } from \"antd\";\nimport { Button } from \"antd\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\nimport {\n  MDBBtn,\n  MDBCol,\n  MDBContainer,\n  MDBIcon,\n  MDBInput,\n  MDBRow,\n} from \"mdbreact\";\nimport { DesktopOutlined, PieChartOutlined } from \"@ant-design/icons\";\nimport LocalTaxiIcon from \"@material-ui/icons/LocalTaxi\";\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\nimport NotificationImportantIcon from \"@material-ui/icons/NotificationImportant\";\nimport ReportProblemOutlinedIcon from \"@material-ui/icons/ReportProblemOutlined\";\nimport NotificationsActiveOutlinedIcon from \"@material-ui/icons/NotificationsActiveOutlined\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\nimport Link from \"@material-ui/core/Link\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport moment from \"moment\";\nimport \"./Dashboard.css\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={3} variant=\"filled\" {...props} />;\n}\n\nfunction Dashboard() {\n  // Layout and Menu\n  const { Content, Sider } = Layout;\n  const { SubMenu } = Menu;\n\n  // report an issue preventDefault\n  const preventDefault = (event) => {\n    event.preventDefault();\n    window.location.href =\n      \"https://github.com/abhishekpatel946/Smart-Vehicle-Fleet-Manager/issues/new/choose\";\n  };\n\n  // snakbar state\n  const [vehicleAddSuccess, setvehicleAddSuccess] = React.useState(false);\n  const [vehicleAddError, setvehicleAddError] = React.useState(false);\n  const [maintainanceAddSuccess, setmaintainanceAddSuccess] = React.useState(\n    false\n  );\n  const [maintainanceAddError, setmaintainanceAddError] = React.useState(false);\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setvehicleAddSuccess(false);\n    setvehicleAddError(false);\n    setmaintainanceAddSuccess(false);\n    setmaintainanceAddError(false);\n  };\n\n  // vehicleId & vehicleName for addVehicle\n  const [vehicleNAME, setVehicleNAME] = useState(\"\");\n  const [vehicleID, setVehicleID] = useState(\"\");\n\n  // vehicleName, dateTime & cost for maintenace\n  const [vehicleRegNumber, setVehicleRegNumber] = useState(\"\");\n  const [date, setDate] = useState(moment().toString());\n  const [cost, setCost] = useState(\"\");\n\n  // set date\n  const onDateChange = (val) => {\n    setDate(val);\n  };\n\n  const [collapseState, setCollapseState] = useState(false);\n  const onCollapse = (collapsed) => {\n    setCollapseState({ collapsed });\n  };\n\n  // form onSubmit handler\n  const submitHandler = (event) => {\n    event.preventDefault();\n    event.target.className += \" was-validated\";\n  };\n\n  // fetch vehicle model & regid\n  // const [vehicleInfo, setVehicleInfo] = useState([]);\n  // let vehicleModel = \"\";\n  // let vehicleModelId = \"\";\n  // db.collection(\"data\")\n  //   .doc(\"MP10ME7969\")\n  //   .get()\n  //   .then((snapshot) => {\n  //     const currentInfo = [];\n  //     snapshot.forEach((doc) => {\n  //       currentInfo.push(doc.data());\n  //     });\n  //     setVehicleInfo(currentInfo);\n  //   });\n  // vehicleInfo.forEach((data) => {\n  //   vehicleModel = data.vehicleId;\n  //   vehicleModelId = data.vehicleName;\n  // });\n\n  // fetch moduleState\n  const [moduleState, setModuleState] = useState([]);\n  let liveState = false;\n  db.collection(\"data\")\n    .doc(\"MP10ME7969\")\n    .collection(\"module_state\")\n    .onSnapshot((docs) => {\n      const currentState = [];\n      docs.forEach((doc) => {\n        currentState.push(doc.data());\n      });\n      setModuleState(currentState);\n    });\n\n  moduleState.forEach((data) => {\n    liveState = data.state;\n  });\n\n  // form vehicleRegister submitHandler\n  const vehicleRegister = (event) => {\n    if (vehicleID && vehicleNAME) {\n      // check if the doc are already available in the DB... then just give the warning to the user!\n\n      // create a doc in DB with vehicleID and set it fields\n      db.collection(\"data\").doc(vehicleID).set({\n        vehicleId: vehicleID,\n        vehicleName: vehicleNAME,\n      });\n\n      // create a dummy collection for newly created vehicleID\n      db.collection(\"data\").doc(vehicleID).collection(\"fuel\").doc().set({\n        id: \"0\",\n        amount: \"0\",\n        timestamp: \"0\",\n      });\n      db.collection(\"data\").doc(vehicleID).collection(\"fuel_refill\").doc().set({\n        id: \"0\",\n        amount: \"0\",\n        timestamp: \"0\",\n      });\n      db.collection(\"data\")\n        .doc(vehicleID)\n        .collection(\"maintainance\")\n        .doc()\n        .set({\n          id: \"0\",\n          amount: \"0\",\n          timestamp: \"0\",\n        });\n      db.collection(\"data\").doc(vehicleID).collection(\"overspeed\").doc().set({\n        id: \"0\",\n        speed: \"0\",\n        timestamp: \"0\",\n      });\n      db.collection(\"data\").doc(vehicleID).collection(\"speed\").doc().set({\n        id: \"0\",\n        speed: \"0\",\n        timestamp: \"0\",\n      });\n      db.collection(\"data\")\n        .doc(vehicleID)\n        .collection(\"accident_alert\")\n        .doc()\n        .set({\n          id: \"0\",\n          accident: \"0\",\n          geolocation_lat: \"0\",\n          geolocation_long: \"0\",\n          timestamp: \"0\",\n        });\n      db.collection(\"data\")\n        .doc(vehicleID)\n        .collection(\"fuel_theft_alert\")\n        .doc()\n        .set({\n          id: \"0\",\n          fuelTheft: \"0\",\n          geolocation_lat: \"0\",\n          geolocation_long: \"0\",\n          timestamp: \"0\",\n        });\n      db.collection(\"data\")\n        .doc(vehicleID)\n        .collection(\"module_state\")\n        .doc()\n        .set({\n          state: \"0\",\n        });\n\n      // success mgs for the all are right\n      setvehicleAddError(false);\n      setmaintainanceAddSuccess(false);\n      setmaintainanceAddError(false);\n      setvehicleAddSuccess(true);\n\n      // set it to defualt to state\n      setVehicleNAME(\"\");\n      setVehicleID(\"\");\n    } else {\n      // alert(\"Both the fields are mandatory!!!\");\n      setvehicleAddSuccess(false);\n      setmaintainanceAddSuccess(false);\n      setmaintainanceAddError(false);\n      setvehicleAddError(true);\n    }\n  };\n\n  // from vehicleMaintenace submitHandler\n  const addCost = (event) => {\n    // store maintainance-cost into database\n    db.collection(\"data\")\n      .doc(vehicleRegNumber)\n      .collection(\"maintainance\")\n      .add({\n        id: vehicleRegNumber,\n        cose: cost,\n        timestamp: date,\n      })\n      .then(function () {\n        // success mgs for the all are right\n        setvehicleAddSuccess(false);\n        setvehicleAddError(false);\n        setmaintainanceAddError(false);\n        setmaintainanceAddSuccess(true);\n      })\n      .catch(function (error) {\n        setvehicleAddSuccess(false);\n        setvehicleAddError(false);\n        setmaintainanceAddSuccess(false);\n        setmaintainanceAddError(true);\n      });\n  };\n\n  // render() {\n  return (\n    <Layout id=\"header\">\n      {/* Header Section */}\n      <HeaderLayout className=\"header\" />\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Sider\n          collapsible\n          collapsed={collapseState.collapsed}\n          onCollapse={onCollapse}\n        >\n          <div className=\"logo\" />\n          <Menu\n            theme=\"dark\"\n            defaultSelectedKeys={[\"stats\"]}\n            defaultOpenKeys={[\"track\"]}\n            mode=\"inline\"\n          >\n            <Menu.Item key=\"stats\" icon={<PieChartOutlined />}>\n              Stats\n            </Menu.Item>\n            <SubMenu key=\"track\" icon={<DesktopOutlined />} title=\"Track\">\n              <Menu.Item key=\"speed\">\n                <Link href=\"#speedSection\">Speed</Link>\n              </Menu.Item>\n              <Menu.Item key=\"fuel\">\n                <Link href=\"#fuelSection\">Fuel</Link>\n              </Menu.Item>\n              <Menu.Item key=\"fuel_refill\">\n                <Link href=\"#fuelRefillSection\">Fuel Refill</Link>\n              </Menu.Item>\n              <Menu.Item key=\"overspeeding\">\n                <Link href=\"#overSpeedingSection\">OverSpeeding</Link>\n              </Menu.Item>\n              <Menu.Item key=\"maintainance\">\n                <Link href=\"#maintainanceSection\">Maintainance</Link>\n              </Menu.Item>\n            </SubMenu>\n            <Menu.Item\n              key=\"accidentAlert\"\n              icon={<NotificationsActiveOutlinedIcon />}\n            >\n              <Link href=\"#accidentAlertSection\">Accident alert</Link>\n            </Menu.Item>\n            <Menu.Item\n              key=\"fuelTheftAlert\"\n              icon={<NotificationImportantIcon />}\n            >\n              <Link href=\"#fuelTheftAlertSection\">FuelTheft alert</Link>\n            </Menu.Item>\n            <Menu.Item key=\"addVehicle\" icon={<LocalTaxiIcon />}>\n              <Link href=\"#addVehicleSection\">Add Vehicle</Link>\n            </Menu.Item>\n            <Menu.Item key=\"addMaintainance\" icon={<PostAddIcon />}>\n              <Link href=\"#addVehicleSection\">Add Maintainance</Link>\n            </Menu.Item>\n            <Menu.Item key=\"reportIssue\" icon={<ReportProblemOutlinedIcon />}>\n              <Link\n                href=\"https://github.com/abhishekpatel946/Smart-Vehicle-Fleet-Manager/issues/new/choose\"\n                onClick={preventDefault}\n              >\n                Report an issue\n              </Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n\n        {/* Breadcrum Naming */}\n        <Layout className=\"site-layout\">\n          <Content style={{ margin: \"0 16px\" }}>\n            <Breadcrumb style={{ margin: \"16px 0\" }}>\n              <Breadcrumb.Item>User</Breadcrumb.Item>\n              <Breadcrumb.Item>Dashboard</Breadcrumb.Item>\n              <div>\n                <p className=\"h6 text-left mb-1\">\n                  Status : {liveState ? \"Active\" : \"Inactive\"}\n                  {/* {vehicleModel}\n                  {vehicleModelId} */}\n                </p>\n              </div>\n            </Breadcrumb>\n            <div\n              className=\"site-layout-background\"\n              style={{ padding: 24, minHeight: 560 }}\n            >\n              {/* Speed Section */}\n              <Divider orientation=\"left\" id=\"speedSection\">\n                Speed area\n              </Divider>\n              <MDBContainer>\n                <SpeedLog />\n              </MDBContainer>\n\n              {/* Fuel Section */}\n              <Divider orientation=\"left\" id=\"fuelSection\">\n                Fuel area\n              </Divider>\n              <MDBContainer>\n                <MDBRow>\n                  <FuelLog />\n                </MDBRow>\n              </MDBContainer>\n\n              {/* OverSpeeding Section */}\n              <Divider orientation=\"left\" id=\"overSpeedingSection\">\n                OverSpeeding area\n              </Divider>\n              <MDBContainer>\n                <MDBRow>\n                  <OverSpeedLog />\n                </MDBRow>\n              </MDBContainer>\n\n              {/* Fuel Refill Section */}\n              <Divider orientation=\"left\" id=\"fuelRefillSection\">\n                Fuel Refill area\n              </Divider>\n              <MDBContainer>\n                <MDBRow>\n                  <FuelRefillLog />\n                </MDBRow>\n              </MDBContainer>\n\n              {/* Maintainence Section */}\n              <Divider orientation=\"left\" id=\"maintainanceSection\">\n                Maintainance area\n              </Divider>\n              <MDBContainer>\n                <MDBRow>\n                  <MaintainenceLog />\n                </MDBRow>\n              </MDBContainer>\n\n              {/* Accident Section */}\n              <Divider orientation=\"left\" id=\"accidentAlertSection\">\n                Accident Alert area\n              </Divider>\n              <MDBContainer>\n                <MDBRow>\n                  <AccidentAlert />\n                </MDBRow>\n              </MDBContainer>\n\n              {/* FuelTheft Section */}\n              <Divider orientation=\"left\" id=\"fuelTheftAlertSection\">\n                FuelTheft Alert area\n              </Divider>\n              <MDBContainer>\n                <MDBRow>\n                  <FuelTheftAlert />\n                </MDBRow>\n              </MDBContainer>\n\n              {/* addVehicle Section */}\n              <Divider orientation=\"left\" id=\"addVehicleSection\">\n                Add Vehicle\n              </Divider>\n              <MDBContainer>\n                <MDBRow>\n                  <MDBCol md=\"6\">\n                    <form\n                      className=\"needs-validation\"\n                      onSubmit={submitHandler}\n                      noValidate\n                    >\n                      <p className=\"h5 text-center mb-4\">Register Vehicle</p>\n                      <div className=\"grey-text\">\n                        <MDBInput\n                          className=\"addVehicle_vehicleNAME\"\n                          name=\"vehicleNAME\"\n                          onChange={(event) =>\n                            setVehicleNAME(event.target.value)\n                          }\n                          value={vehicleNAME}\n                          label=\"Your vehicle name\"\n                          icon=\"car\"\n                          group\n                          type=\"text\"\n                          validate\n                          error=\"wrong\"\n                          success=\"right\"\n                          required\n                        />\n                        <MDBInput\n                          className=\"addVehicle_vehicleID\"\n                          name=\"vehicleID\"\n                          onChange={(event) => setVehicleID(event.target.value)}\n                          value={vehicleID}\n                          label=\"Your vechile reg. number\"\n                          icon=\"registered\"\n                          group\n                          type=\"text\"\n                          validate\n                          error=\"wrong\"\n                          success=\"right\"\n                          required\n                        />\n                      </div>\n                      <div className=\"text-center\">\n                        <MDBBtn outline type=\"submit\" onClick={vehicleRegister}>\n                          Register\n                          <MDBIcon className=\"ml-1\" />\n                        </MDBBtn>\n                      </div>\n                    </form>\n                  </MDBCol>\n                  <MDBCol md=\"6\">\n                    <form\n                      className=\"needs-validation\"\n                      onSubmit={submitHandler}\n                      noValidate\n                    >\n                      <p className=\"h5 text-center mb-4\">\n                        Register Maintainance\n                      </p>\n                      <div className=\"grey-text\">\n                        <MDBInput\n                          className=\"addVehicle_vehicleNAME\"\n                          name=\"vehicleName\"\n                          onChange={(event) =>\n                            setVehicleRegNumber(event.target.value)\n                          }\n                          value={vehicleRegNumber}\n                          label=\"Your vehicle Reg number\"\n                          icon=\"registered\"\n                          group\n                          type=\"text\"\n                          validate\n                          error=\"wrong\"\n                          success=\"right\"\n                          required\n                        />\n                        <div>\n                          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <KeyboardDatePicker\n                              disableToolbar\n                              fullWidth\n                              variant=\"inline\"\n                              format=\"dd/MM/yyyy\"\n                              margin=\"normal\"\n                              id=\"date-picker-inline\"\n                              label=\"DD/MM/YYYY\"\n                              value={date}\n                              onChange={onDateChange}\n                              KeyboardButtonProps={{\n                                \"aria-label\": \"change date\",\n                              }}\n                            />\n                          </MuiPickersUtilsProvider>\n                        </div>\n                        <MDBInput\n                          className=\"addVehicle_vehicleID\"\n                          name=\"cost\"\n                          onChange={(event) => setCost(event.target.value)}\n                          value={cost}\n                          label=\"Your mainatenace cost...\"\n                          icon=\"rupee-sign\"\n                          group\n                          type=\"text\"\n                          validate\n                          error=\"wrong\"\n                          success=\"right\"\n                          required\n                        />\n                      </div>\n                      <div className=\"text-center\">\n                        <MDBBtn outline type=\"submit\" onClick={addCost}>\n                          Add Cost\n                          <MDBIcon className=\"ml-1\" />\n                        </MDBBtn>\n                      </div>\n                    </form>\n                  </MDBCol>\n                </MDBRow>\n              </MDBContainer>\n\n              {/* back to top */}\n              <Link href=\"#header\">\n                <Button\n                  // ghost\n                  icon={<NavigationIcon />}\n                  style={{\n                    float: \"right\",\n                    margin: \"auto 20px 10px 20px\",\n                  }}\n                >\n                  {\" \"}\n                  Back to top{\" \"}\n                </Button>\n              </Link>\n\n              {/* End */}\n            </div>\n          </Content>\n\n          {/* snakbar notifiers */}\n          <Snackbar\n            open={vehicleAddSuccess}\n            autoHideDuration={3000}\n            onClose={handleClose}\n          >\n            <Alert onClose={handleClose} severity=\"success\">\n              Vehicle added successfully.\n            </Alert>\n          </Snackbar>\n          <Snackbar\n            open={vehicleAddError}\n            autoHideDuration={3000}\n            onClose={handleClose}\n          >\n            <Alert onClose={handleClose} severity=\"error\">\n              All the field's are mendatory!!!\n            </Alert>\n          </Snackbar>\n          <Snackbar\n            open={maintainanceAddSuccess}\n            autoHideDuration={3000}\n            onClose={handleClose}\n          >\n            <Alert onClose={handleClose} severity=\"success\">\n              Maintainance added successfully.\n            </Alert>\n          </Snackbar>\n          <Snackbar\n            open={maintainanceAddError}\n            autoHideDuration={3000}\n            onClose={handleClose}\n          >\n            <Alert onClose={handleClose} severity=\"error\">\n              All the field's are mendatory!!!\n            </Alert>\n          </Snackbar>\n\n          {/* footer */}\n          <FooterLayout />\n        </Layout>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default Dashboard;\n","import React, { useEffect } from \"react\";\nimport { auth } from \"firebase\";\nimport { useStateValue } from \"./component/ContextProvider/StateProvider\";\nimport Home from \"./component/Login/home\";\nimport Dashboard from \"./component/dashboard/Dashboard\";\nimport \"./App.css\";\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    const subscribe = () => {\n      auth().onAuthStateChanged((authUser) => {\n        if (authUser) {\n          // generate a unique userId for each user\n          // console.log(`user id ==>> ${authUser.uid}`);\n\n          // the user just logged-in | the user was logged-in\n          dispatch({\n            type: \"SET_USER\",\n            user: authUser,\n          });\n        } else {\n          // the user is logged-out\n          dispatch({\n            type: \"SET_USER\",\n            user: null,\n          });\n        }\n      });\n    };\n    subscribe();\n  });\n\n  return <div className=\"App\">{user ? <Dashboard /> : <Home />}</div>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\n  user: null,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.user,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n// import \"~@fortawesome/fontawesome-free/css/fontawesome.css\";\n// import \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { StateProvider } from \"./component/ContextProvider/StateProvider\";\nimport reducer, { initialState } from \"./component/ContextProvider/Reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}